{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\cart-Simple-redux\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\n// import {layoutActions} from './components/store/CartLayout'\nimport { actionsCart, sendCartData, fetchedData } from './components/store/CartSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet initial = true; // here we write this out of component to not execute again\n\nfunction App() {\n  _s();\n  const cartItems = useSelector(state => state.cartSlice);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.cartLayout.notification);\n  useEffect(() => {\n    dispatch();\n  }, []);\n  useEffect(() => {\n    if (initial) {\n      initial = false;\n      return;\n    }\n    dispatch(sendCartData(cartItems));\n\n    //   dispatch(layoutActions.notificationHandle({\n    //     status : 'pending' ,\n    //     title : 'Sending ...' ,\n    //     message : 'Waiting Data'\n    //   }))\n\n    //   const response = await fetch('https://rest-api-90502-default-rtdb.firebaseio.com/cart.json',{\n    //     method:\"PUT\",\n    //     body:JSON.stringify(cartItems)\n    //   })\n\n    //   dispatch(layoutActions.notificationHandle({\n    //     status : 'success' ,\n    //     title : 'Success Process' ,\n    //     message : 'Successfully getting Data'\n    //   }))\n\n    //   if(!response.ok) {\n    //     throw new Error(\"Failed to Fetch Data\")\n    //   }\n    // }\n\n    // sendDate().catch((error)=>{ // here we can use catch because this function reurns a promise\n    //   dispatch(layoutActions.notificationHandle({\n    //     status : 'error' ,\n    //     title : 'Error Ocurred' ,\n    //     message : 'Failed to Fetch Data'\n    //   }))\n\n    // })\n  }, [cartItems, dispatch]);\n  const isVisible = useSelector(state => state.cartLayout.isVisible);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [isVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"VZ5fOFBtQocgLSDQ4HlT5QQlpLc=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","Cart","Layout","Products","Notification","actionsCart","sendCartData","fetchedData","jsxDEV","_jsxDEV","Fragment","_Fragment","initial","App","_s","cartItems","state","cartSlice","dispatch","notification","cartLayout","isVisible","children","status","title","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/cart-Simple-redux/src/App.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\n// import {layoutActions} from './components/store/CartLayout'\nimport { actionsCart, sendCartData,fetchedData } from './components/store/CartSlice'\nlet initial = true;  // here we write this out of component to not execute again\n\nfunction App() {\n  const cartItems = useSelector((state)=>state.cartSlice)\n  const dispatch = useDispatch();\n  const notification = useSelector((state) => state.cartLayout.notification) ;\n\n  useEffect(()=>{\n    dispatch()\n  \n  },[])\n\n  useEffect(()=>{\n      if(initial) {\n        initial = false ;\n        return ;\n      }\n      dispatch(sendCartData(cartItems));\n\n\n    //   dispatch(layoutActions.notificationHandle({\n    //     status : 'pending' ,\n    //     title : 'Sending ...' ,\n    //     message : 'Waiting Data'\n    //   }))\n\n\n\n    //   const response = await fetch('https://rest-api-90502-default-rtdb.firebaseio.com/cart.json',{\n    //     method:\"PUT\",\n    //     body:JSON.stringify(cartItems)\n    //   })\n\n    //   dispatch(layoutActions.notificationHandle({\n    //     status : 'success' ,\n    //     title : 'Success Process' ,\n    //     message : 'Successfully getting Data'\n    //   }))\n\n\n\n    //   if(!response.ok) {\n    //     throw new Error(\"Failed to Fetch Data\")\n    //   }\n    // }\n\n    // sendDate().catch((error)=>{ // here we can use catch because this function reurns a promise\n    //   dispatch(layoutActions.notificationHandle({\n    //     status : 'error' ,\n    //     title : 'Error Ocurred' ,\n    //     message : 'Failed to Fetch Data'\n    //   }))\n\n    // })\n}\n  , [cartItems,dispatch])\n\n  const isVisible = useSelector((state) =>state.cartLayout.isVisible) ;\n\n  return (\n    <>\n    <Notification status={notification.status} title={notification.title} message={notification.message} />\n    <Layout>\n      {isVisible && <Cart />}\n      <Products />\n    </Layout>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,YAAY,MAAM,8BAA8B;AACvD;AACA,SAASC,WAAW,EAAEC,YAAY,EAACC,WAAW,QAAQ,8BAA8B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACpF,IAAIC,OAAO,GAAG,IAAI,CAAC,CAAE;;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,SAAS,GAAGf,WAAW,CAAEgB,KAAK,IAAGA,KAAK,CAACC,SAAS,CAAC;EACvD,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9B,MAAMoB,YAAY,GAAGnB,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACI,UAAU,CAACD,YAAY,CAAC;EAE1ErB,SAAS,CAAC,MAAI;IACZoB,QAAQ,CAAC,CAAC;EAEZ,CAAC,EAAC,EAAE,CAAC;EAELpB,SAAS,CAAC,MAAI;IACV,IAAGc,OAAO,EAAE;MACVA,OAAO,GAAG,KAAK;MACf;IACF;IACAM,QAAQ,CAACZ,YAAY,CAACS,SAAS,CAAC,CAAC;;IAGnC;IACA;IACA;IACA;IACA;;IAIA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAIA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;EACJ,CAAC,EACG,CAACA,SAAS,EAACG,QAAQ,CAAC,CAAC;EAEvB,MAAMG,SAAS,GAAGrB,WAAW,CAAEgB,KAAK,IAAIA,KAAK,CAACI,UAAU,CAACC,SAAS,CAAC;EAEnE,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACAb,OAAA,CAACL,YAAY;MAACmB,MAAM,EAAEJ,YAAY,CAACI,MAAO;MAACC,KAAK,EAAEL,YAAY,CAACK,KAAM;MAACC,OAAO,EAAEN,YAAY,CAACM;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvGpB,OAAA,CAACP,MAAM;MAAAoB,QAAA,GACJD,SAAS,iBAAIZ,OAAA,CAACR,IAAI;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtBpB,OAAA,CAACN,QAAQ;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eACP,CAAC;AAEP;AAACf,EAAA,CAlEQD,GAAG;EAAA,QACQb,WAAW,EACZD,WAAW,EACPC,WAAW,EAoDdA,WAAW;AAAA;AAAA8B,EAAA,GAvDtBjB,GAAG;AAoEZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}