{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart-slice\",\n  initialState: {\n    items: [],\n    totalPrice: 0,\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const info = action.payload;\n      const findItem = state.items.findIndex(item => item.id == info.id);\n      if (findItem > -1) {\n        state.totalQuantity++;\n        let updatedItem = {\n          ...info,\n          quantity: state.items[findItem].quantity + 1\n        };\n        state.items[findItem] = updatedItem;\n        state.totalPrice = state.totalPrice + state.items[findItem].price;\n      } else {\n        // const findItem = state.items.findIndex((item)=> item.id == info.id) ;\n        state.totalQuantity++;\n        state.items.push({\n          ...info,\n          quantity: 1\n        });\n        state.totalPrice = state.totalPrice + info.price;\n      }\n\n      // const UpdatedItems = [...state.items] ;\n      // if(findItem > -1){\n      //     console.log(UpdatedItems)\n      //     let updatedItem = {\n      //         ...UpdatedItems[findItem] ,\n      //         quantity : UpdatedItems[findItem].quantity + 1 \n      //     }\n\n      //     UpdatedItems[findItem] = updatedItem ;\n      // }\n\n      // else {\n      //     UpdatedItems.push({\n      //         ...action.payload,\n      //         quantity : 1\n      //     })\n      // }\n\n      // return {...state , items :UpdatedItems } ;\n    },\n    removeItemFromCart(state, action) {\n      const info = action.payload;\n      const findItem = state.items.findIndex(item => item.id == info.id);\n      if (findItem > -1) {\n        state.totalQuantity--;\n        let updatedItem = {\n          ...info,\n          quantity: state.items[findItem].quantity - 1\n        };\n        state.items[findItem] = updatedItem;\n        state.totalPrice = state.totalPrice - state.items[findItem].price;\n      }\n      if (state.items[findItem].quantity < 1) {\n        // state.totalPrice = state.totalPrice - state.items[findItem].price\n        state.items.splice(findItem, 1);\n      }\n\n      // const findItem = state.items.findIndex((item)=> item.id == action.payload.id) ;\n      // let UpdatedItems = [...state.items] ;\n\n      // if(findItem > -1){\n\n      //     let updatedItem = {\n      //         ...UpdatedItems[findItem] ,\n      //         quantity : UpdatedItems[findItem].quantity - 1 \n      //     }\n      //     UpdatedItems[findItem] = updatedItem ;\n      // }\n      // if(UpdatedItems[findItem].quantity < 1){\n      //         console.log(\"Done\")\n      //         UpdatedItems.splice(findItem,1);\n      // }\n\n      // return {...state ,items :UpdatedItems }\n    }\n  }\n});\nfunction sendCartData(cartData) {\n  return async dispatch => {\n    dispatch(layoutActions.notificationHandle({\n      status: 'pending',\n      title: 'Sending ...',\n      message: 'Waiting Data'\n    }));\n    const sendData = async () => {\n      const response = await fetch('https://rest-api-90502-default-rtdb.firebaseio.com/cart.json', {\n        method: \"PUT\",\n        body: JSON.stringify(cartItems)\n      });\n    };\n  };\n}\nexport const actionsCart = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalPrice","totalQuantity","reducers","addItemToCart","state","action","info","payload","findItem","findIndex","item","id","updatedItem","quantity","price","push","removeItemFromCart","splice","sendCartData","cartData","dispatch","layoutActions","notificationHandle","status","title","message","sendData","response","fetch","method","body","JSON","stringify","cartItems","actionsCart","actions","reducer"],"sources":["C:/Users/hp/Downloads/cart-Simple-redux/src/components/store/CartSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name:\"cart-slice\" ,\r\n    initialState : { \r\n        items:[] ,\r\n        totalPrice : 0 ,\r\n        totalQuantity : 0\r\n     } ,\r\n    reducers: { \r\n        addItemToCart(state , action){\r\n            const info  = action.payload ;\r\n            const findItem = state.items.findIndex((item)=> item.id == info.id) ;\r\n            \r\n            if( findItem > -1 ){\r\n                state.totalQuantity ++ ; \r\n                let updatedItem = {\r\n                    ...info ,\r\n                    quantity : state.items[findItem].quantity + 1 \r\n                }\r\n                state.items[findItem] = updatedItem ;\r\n                state.totalPrice = state.totalPrice + state.items[findItem].price\r\n            \r\n            } else{\r\n                // const findItem = state.items.findIndex((item)=> item.id == info.id) ;\r\n                state.totalQuantity ++ ; \r\n                state.items.push({\r\n                    ...info ,\r\n                    quantity : 1\r\n                })\r\n                state.totalPrice = state.totalPrice + info.price\r\n            }\r\n\r\n\r\n\r\n            // const UpdatedItems = [...state.items] ;\r\n            // if(findItem > -1){\r\n            //     console.log(UpdatedItems)\r\n            //     let updatedItem = {\r\n            //         ...UpdatedItems[findItem] ,\r\n            //         quantity : UpdatedItems[findItem].quantity + 1 \r\n            //     }\r\n\r\n            //     UpdatedItems[findItem] = updatedItem ;\r\n            // }\r\n\r\n            // else {\r\n            //     UpdatedItems.push({\r\n            //         ...action.payload,\r\n            //         quantity : 1\r\n            //     })\r\n            // }\r\n\r\n            // return {...state , items :UpdatedItems } ;\r\n        } ,\r\n\r\n        removeItemFromCart(state , action){\r\n\r\n            const info  = action.payload ;\r\n            const findItem = state.items.findIndex((item)=> item.id == info.id) ;\r\n            \r\n            if( findItem > -1 ){\r\n                state.totalQuantity -- ; \r\n                let updatedItem = {\r\n                    ...info ,\r\n                    quantity : state.items[findItem].quantity - 1 \r\n                }\r\n                state.items[findItem] = updatedItem ;\r\n                state.totalPrice = state.totalPrice - state.items[findItem].price\r\n            } \r\n\r\n            if(state.items[findItem].quantity < 1){\r\n                // state.totalPrice = state.totalPrice - state.items[findItem].price\r\n                state.items.splice(findItem , 1) ;\r\n            }\r\n\r\n\r\n            \r\n            // const findItem = state.items.findIndex((item)=> item.id == action.payload.id) ;\r\n            // let UpdatedItems = [...state.items] ;\r\n\r\n            // if(findItem > -1){\r\n\r\n            //     let updatedItem = {\r\n            //         ...UpdatedItems[findItem] ,\r\n            //         quantity : UpdatedItems[findItem].quantity - 1 \r\n            //     }\r\n            //     UpdatedItems[findItem] = updatedItem ;\r\n            // }\r\n            // if(UpdatedItems[findItem].quantity < 1){\r\n            //         console.log(\"Done\")\r\n            //         UpdatedItems.splice(findItem,1);\r\n            // }\r\n\r\n            // return {...state ,items :UpdatedItems }\r\n        }\r\n    }\r\n}\r\n)\r\n\r\nfunction sendCartData(cartData){\r\n    return async (dispatch)=>{\r\n\r\n        dispatch(layoutActions.notificationHandle({\r\n            status : 'pending' ,\r\n            title : 'Sending ...' ,\r\n            message : 'Waiting Data'\r\n        }))\r\n\r\n        const sendData = async()=>{\r\n            const response = await fetch('https://rest-api-90502-default-rtdb.firebaseio.com/cart.json',{\r\n                method:\"PUT\",\r\n                body:JSON.stringify(cartItems)\r\n            })        }\r\n\r\n    }\r\n}\r\n\r\nexport const actionsCart = cartSlice.actions ;\r\n\r\nexport default cartSlice.reducer ;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}