{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart-slice\",\n  initialState: {\n    items: []\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      console.log(findItem);\n      if (findItem > -1) {\n        const findItem = state.items.findIndex(item => item.id == action.id);\n        const UpdatedItems = [...state.items];\n        let existingItem = UpdatedItems[findItem];\n        let updatedItem = {\n          ...existingItem,\n          quantity: existingItem.quantity + 1\n        };\n        existingItem = updatedItem;\n      } else {\n        UpdatedItems.push({\n          ...action,\n          quantity: 1\n        });\n      }\n      return {\n        ...state,\n        items: UpdatedItems\n      };\n    },\n    removeItemFromCart(state, action) {\n      const findItem = state.items.findIndex(item => item.id == action.id);\n      const UpdatedItems = [...state.items];\n      console.log(findItem);\n      if (findItem > -1) {\n        console.log(findItem);\n        const existingItem = UpdatedItems[findItem];\n        let updatedItem = {\n          ...existingItem,\n          quantity: existingItem.quantity - 1\n        };\n        UpdatedItems[findItem] = updatedItem;\n      } else if (UpdatedItems[findItem].quantity === 1) {\n        UpdatedItems.splice(findItem, 1);\n        console.log(findItem);\n      }\n      return {\n        ...state,\n        items: UpdatedItems\n      };\n    }\n  }\n});\nexport const actionsCart = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","reducers","addItemToCart","state","action","console","log","findItem","findIndex","item","id","UpdatedItems","existingItem","updatedItem","quantity","push","removeItemFromCart","splice","actionsCart","actions","reducer"],"sources":["C:/Users/hp/Downloads/cart-Simple-redux/src/components/store/CartSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name:\"cart-slice\" ,\r\n    initialState : { items:[] } ,\r\n    reducers: { \r\n        addItemToCart(state , action){\r\n\r\n            console.log(findItem)\r\n            if(findItem > -1){\r\n                const findItem = state.items.findIndex((item)=> item.id == action.id) ;\r\n                const UpdatedItems = [...state.items] ;\r\n                let existingItem = UpdatedItems[findItem] ;\r\n                let updatedItem = {\r\n                    ...existingItem ,\r\n                    quantity : existingItem.quantity + 1 \r\n                }\r\n\r\n                existingItem = updatedItem ;\r\n            }\r\n\r\n            else {\r\n                UpdatedItems.push({\r\n                    ...action,\r\n                    quantity : 1\r\n                })\r\n            }\r\n\r\n            return {...state , items :UpdatedItems } ;\r\n        } ,\r\n\r\n        removeItemFromCart(state , action){\r\n            \r\n            const findItem = state.items.findIndex((item)=> item.id == action.id) ;\r\n            const UpdatedItems = [...state.items] ;\r\n            console.log(findItem)\r\n\r\n            if(findItem > -1){\r\n                console.log(findItem)\r\n                const existingItem = UpdatedItems[findItem] ;\r\n                let updatedItem = {\r\n                    ...existingItem ,\r\n                    quantity : existingItem.quantity - 1 \r\n                }\r\n                UpdatedItems[findItem] = updatedItem ;\r\n            }\r\n            else if(UpdatedItems[findItem].quantity === 1){\r\n                UpdatedItems.splice(findItem,1);\r\n                console.log(findItem)\r\n\r\n            }\r\n\r\n            return {...state ,items :UpdatedItems }\r\n        }\r\n\r\n\r\n    }\r\n})\r\n\r\nexport const actionsCart = cartSlice.actions ;\r\n\r\nexport default cartSlice.reducer ;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAC,YAAY;EACjBC,YAAY,EAAG;IAAEC,KAAK,EAAC;EAAG,CAAC;EAC3BC,QAAQ,EAAE;IACNC,aAAaA,CAACC,KAAK,EAAGC,MAAM,EAAC;MAEzBC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;MACrB,IAAGA,QAAQ,GAAG,CAAC,CAAC,EAAC;QACb,MAAMA,QAAQ,GAAGJ,KAAK,CAACH,KAAK,CAACQ,SAAS,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,IAAIN,MAAM,CAACM,EAAE,CAAC;QACrE,MAAMC,YAAY,GAAG,CAAC,GAAGR,KAAK,CAACH,KAAK,CAAC;QACrC,IAAIY,YAAY,GAAGD,YAAY,CAACJ,QAAQ,CAAC;QACzC,IAAIM,WAAW,GAAG;UACd,GAAGD,YAAY;UACfE,QAAQ,EAAGF,YAAY,CAACE,QAAQ,GAAG;QACvC,CAAC;QAEDF,YAAY,GAAGC,WAAW;MAC9B,CAAC,MAEI;QACDF,YAAY,CAACI,IAAI,CAAC;UACd,GAAGX,MAAM;UACTU,QAAQ,EAAG;QACf,CAAC,CAAC;MACN;MAEA,OAAO;QAAC,GAAGX,KAAK;QAAGH,KAAK,EAAEW;MAAa,CAAC;IAC5C,CAAC;IAEDK,kBAAkBA,CAACb,KAAK,EAAGC,MAAM,EAAC;MAE9B,MAAMG,QAAQ,GAAGJ,KAAK,CAACH,KAAK,CAACQ,SAAS,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,IAAIN,MAAM,CAACM,EAAE,CAAC;MACrE,MAAMC,YAAY,GAAG,CAAC,GAAGR,KAAK,CAACH,KAAK,CAAC;MACrCK,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;MAErB,IAAGA,QAAQ,GAAG,CAAC,CAAC,EAAC;QACbF,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;QACrB,MAAMK,YAAY,GAAGD,YAAY,CAACJ,QAAQ,CAAC;QAC3C,IAAIM,WAAW,GAAG;UACd,GAAGD,YAAY;UACfE,QAAQ,EAAGF,YAAY,CAACE,QAAQ,GAAG;QACvC,CAAC;QACDH,YAAY,CAACJ,QAAQ,CAAC,GAAGM,WAAW;MACxC,CAAC,MACI,IAAGF,YAAY,CAACJ,QAAQ,CAAC,CAACO,QAAQ,KAAK,CAAC,EAAC;QAC1CH,YAAY,CAACM,MAAM,CAACV,QAAQ,EAAC,CAAC,CAAC;QAC/BF,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;MAEzB;MAEA,OAAO;QAAC,GAAGJ,KAAK;QAAEH,KAAK,EAAEW;MAAa,CAAC;IAC3C;EAGJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMO,WAAW,GAAGrB,SAAS,CAACsB,OAAO;AAE5C,eAAetB,SAAS,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}